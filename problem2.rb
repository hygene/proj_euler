#!/usr/local/bin/ruby -w

# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# 
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

def solve (limit) 
  # initialize variables
  n_first = 1
  n_second = 2
  step = 0 # temporary variable to hold iterative value
  output = 2

  while n_second < limit
    step = n_first + n_second
    output += (step%2) == 0 ? step : 0
    n_first = n_second
    n_second = step
    # puts "step = " + step.to_s + ", n_first = " + n_first.to_s + ", n_second = " + n_second.to_s + ", output = " + output.to_s
  end

  return output
end

#Main entry point
puts solve(4000000)